<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="random_8cuh" kind="file" language="C++">
    <compoundname>random.cuh</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">//<sp/>Copyright<sp/>2025<sp/>Alişah<sp/>Özcan</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0,<sp/>see<sp/>LICENSE<sp/>for<sp/>details.</highlight></codeline>
<codeline><highlight class="normal">//<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Developer:<sp/>Alişah<sp/>Özcan</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#ifndef<sp/>HEONGPU_RANDOM_GENERATOR_CLASS_H</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>HEONGPU_RANDOM_GENERATOR_CLASS_H</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;mutex&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;memory&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;vector&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;sys/sysinfo.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;common.cuh&quot;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;complex.cuh&quot;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;aes_rng.cuh&quot;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>---------------------<sp/>//</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Author:<sp/>Alisah<sp/>Ozcan</highlight></codeline>
<codeline><highlight class="normal">//<sp/>---------------------<sp/>//</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">namespace<sp/>heongpu</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>struct<sp/>RNGSeed</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>char&gt;<sp/>key_;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>char&gt;<sp/>nonce_;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>char&gt;<sp/>personalization_string_;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RNGSeed()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key_<sp/>=<sp/>std::vector&lt;unsigned<sp/>char&gt;(16);<sp/>//<sp/>for<sp/>128<sp/>bit</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(1<sp/>!=<sp/>RAND_bytes(key_.data(),<sp/>key_.size()))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw<sp/>std::runtime_error(&quot;RAND_bytes<sp/>failed&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nonce_<sp/>=<sp/>std::vector&lt;unsigned<sp/>char&gt;(8);<sp/>//<sp/>for<sp/>128<sp/>bit</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(1<sp/>!=<sp/>RAND_bytes(nonce_.data(),<sp/>nonce_.size()))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw<sp/>std::runtime_error(&quot;RAND_bytes<sp/>failed&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RNGSeed(const<sp/>std::vector&lt;unsigned<sp/>char&gt;&amp;<sp/>key,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>std::vector&lt;unsigned<sp/>char&gt;&amp;<sp/>nonce,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>std::vector&lt;unsigned<sp/>char&gt;&amp;<sp/>personalization_string)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>key_(key),<sp/>nonce_(nonce),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>personalization_string_(personalization_string)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(key_.size()<sp/>&lt;<sp/>16)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw<sp/>std::invalid_argument(&quot;Invalid<sp/>key<sp/>size!&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>class<sp/>RandomNumberGenerator</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>public:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>RandomNumberGenerator&amp;<sp/>instance();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialize(const<sp/>std::vector&lt;unsigned<sp/>char&gt;&amp;<sp/>key,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>std::vector&lt;unsigned<sp/>char&gt;&amp;<sp/>nonce,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>std::vector&lt;unsigned<sp/>char&gt;&amp;<sp/>personalization_string,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rngongpu::SecurityLevel<sp/>security_level,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/>prediction_resistance_enabled);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~RandomNumberGenerator();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>set(const<sp/>std::vector&lt;unsigned<sp/>char&gt;&amp;<sp/>entropy_input,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>std::vector&lt;unsigned<sp/>char&gt;&amp;<sp/>nonce,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>std::vector&lt;unsigned<sp/>char&gt;&amp;<sp/>personalization_string,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream<sp/>=<sp/>cudaStreamDefault);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Generates<sp/>modular<sp/>uniform<sp/>random<sp/>numbers<sp/>according<sp/>to<sp/>given</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>modulo<sp/>order.<sp/>(From<sp/>RNGonGPU<sp/>Library)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>function<sp/>produces<sp/>uniform<sp/>random<sp/>numbers<sp/>that<sp/>are<sp/>reduced<sp/>modulo</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>a<sp/>given<sp/>modulo<sp/>order.<sp/>The<sp/>numbers<sp/>are<sp/>written<sp/>to<sp/>the<sp/>memory<sp/>pointed</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>by<sp/>@p<sp/>pointer,<sp/>which<sp/>must<sp/>reside<sp/>on<sp/>the<sp/>GPU<sp/>or<sp/>in<sp/>unified<sp/>memory.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>the<sp/>pointer<sp/>does<sp/>not<sp/>reference<sp/>GPU<sp/>or<sp/>unified<sp/>memory,<sp/>an<sp/>error<sp/>is</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>thrown.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>pointer<sp/>Pointer<sp/>to<sp/>the<sp/>memory<sp/>for<sp/>storing<sp/>random<sp/>numbers</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(device<sp/>or<sp/>unified<sp/>memory<sp/>required).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>modulus<sp/>The<sp/>modulus<sp/>used<sp/>to<sp/>reduce<sp/>the<sp/>generated<sp/>random</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>numbers<sp/>(device<sp/>or<sp/>unified<sp/>memory<sp/>required).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>log_size<sp/>The<sp/>log<sp/>domain<sp/>number<sp/>of<sp/>random<sp/>numbers<sp/>to<sp/>generate.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(log_size<sp/>should<sp/>be<sp/>power<sp/>of<sp/>2)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>mod_count<sp/>The<sp/>mod<sp/>count<sp/>indicates<sp/>how<sp/>many<sp/>different<sp/>moduli</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>are<sp/>used.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>repeat_count<sp/>The<sp/>repeat<sp/>count<sp/>indicates<sp/>how<sp/>many<sp/>times<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>modulus<sp/>order<sp/>is<sp/>repeated.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@example</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>example1:<sp/>each<sp/>array<sp/>size<sp/>=<sp/>2^log_size,<sp/>mod_count<sp/>=<sp/>3,<sp/>repeat_count<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>modulus<sp/>order:<sp/>[<sp/><sp/>q0<sp/>,<sp/><sp/><sp/>q1<sp/>,<sp/><sp/><sp/>q2<sp/>,<sp/><sp/><sp/>q3<sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>array<sp/>order<sp/><sp/>:<sp/>[array0,<sp/>array1,<sp/>array2]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>output<sp/>array<sp/>:<sp/>[array0<sp/>%<sp/>q0,<sp/>array1<sp/>%<sp/>q1,<sp/>array2<sp/>%<sp/>q2]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>example2:<sp/>each<sp/>array<sp/>size<sp/>=<sp/>2^log_size,<sp/>mod_count<sp/>=<sp/>2,<sp/>repeat_count<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>2</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>modulus<sp/>order:<sp/>[<sp/><sp/>q0<sp/>,<sp/><sp/><sp/>q1<sp/>,<sp/><sp/><sp/>q2<sp/>,<sp/><sp/><sp/>q3<sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>array<sp/>order<sp/><sp/>:<sp/>[array0,<sp/>array1,<sp/>array2,<sp/>array3]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>output<sp/>array<sp/>:<sp/>[array0<sp/>%<sp/>q0,<sp/>array1<sp/>%<sp/>q1,<sp/>array2<sp/>%<sp/>q0,<sp/>array3<sp/>%</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>q1]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@note<sp/>Total<sp/>generated<sp/>random<sp/>number<sp/>count<sp/>=<sp/>(2^log_size)<sp/>x<sp/>mod_count</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>x<sp/>repeat_count</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__host__<sp/>void<sp/>modular_uniform_random_number_generation(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data64*<sp/>pointer,<sp/>Modulus64*<sp/>modulus,<sp/>Data64<sp/>log_size,<sp/>int<sp/>mod_count,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>repeat_count,<sp/>cudaStream_t<sp/>stream<sp/>=<sp/>cudaStreamDefault);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Generates<sp/>modular<sp/>uniform<sp/>random<sp/>numbers<sp/>according<sp/>to<sp/>given</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>modulo<sp/>order.<sp/>(From<sp/>RNGonGPU<sp/>Library)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>function<sp/>produces<sp/>uniform<sp/>random<sp/>numbers<sp/>that<sp/>are<sp/>reduced<sp/>modulo</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>a<sp/>given<sp/>modulo<sp/>order.<sp/>The<sp/>numbers<sp/>are<sp/>written<sp/>to<sp/>the<sp/>memory<sp/>pointed</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>by<sp/>@p<sp/>pointer,<sp/>which<sp/>must<sp/>reside<sp/>on<sp/>the<sp/>GPU<sp/>or<sp/>in<sp/>unified<sp/>memory.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>the<sp/>pointer<sp/>does<sp/>not<sp/>reference<sp/>GPU<sp/>or<sp/>unified<sp/>memory,<sp/>an<sp/>error<sp/>is</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>thrown.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>pointer<sp/>Pointer<sp/>to<sp/>the<sp/>memory<sp/>for<sp/>storing<sp/>random<sp/>numbers</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(device<sp/>or<sp/>unified<sp/>memory<sp/>required).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>modulus<sp/>The<sp/>modulus<sp/>used<sp/>to<sp/>reduce<sp/>the<sp/>generated<sp/>random</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>numbers<sp/>(device<sp/>or<sp/>unified<sp/>memory<sp/>required).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>log_size<sp/>The<sp/>log<sp/>domain<sp/>number<sp/>of<sp/>random<sp/>numbers<sp/>to<sp/>generate.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(log_size<sp/>should<sp/>be<sp/>power<sp/>of<sp/>2)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>mod_count<sp/>The<sp/>mod<sp/>count<sp/>indicates<sp/>how<sp/>many<sp/>different<sp/>moduli</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>are<sp/>used.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>repeat_count<sp/>The<sp/>repeat<sp/>count<sp/>indicates<sp/>how<sp/>many<sp/>times<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>modulus<sp/>order<sp/>is<sp/>repeated.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>entropy_input<sp/>The<sp/>entropy<sp/>input<sp/>string<sp/>of<sp/>bits<sp/>obtained<sp/>from</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>randomness<sp/>source.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>additional_input<sp/>The<sp/>additional<sp/>input<sp/>string<sp/>received<sp/>from<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>consuming<sp/>application.<sp/>Note<sp/>that<sp/>the<sp/>length<sp/>of<sp/>the<sp/>additional_input</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>string<sp/>may<sp/>be<sp/>zero.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@example</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>example1:<sp/>each<sp/>array<sp/>size<sp/>=<sp/>2^log_size,<sp/>mod_count<sp/>=<sp/>3,<sp/>repeat_count<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>modulus<sp/>order:<sp/>[<sp/><sp/>q0<sp/>,<sp/><sp/><sp/>q1<sp/>,<sp/><sp/><sp/>q2<sp/>,<sp/><sp/><sp/>q3<sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>array<sp/>order<sp/><sp/>:<sp/>[array0,<sp/>array1,<sp/>array2]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>output<sp/>array<sp/>:<sp/>[array0<sp/>%<sp/>q0,<sp/>array1<sp/>%<sp/>q1,<sp/>array2<sp/>%<sp/>q2]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>example2:<sp/>each<sp/>array<sp/>size<sp/>=<sp/>2^log_size,<sp/>mod_count<sp/>=<sp/>2,<sp/>repeat_count<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>2</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>modulus<sp/>order:<sp/>[<sp/><sp/>q0<sp/>,<sp/><sp/><sp/>q1<sp/>,<sp/><sp/><sp/>q2<sp/>,<sp/><sp/><sp/>q3<sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>array<sp/>order<sp/><sp/>:<sp/>[array0,<sp/>array1,<sp/>array2,<sp/>array3]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>output<sp/>array<sp/>:<sp/>[array0<sp/>%<sp/>q0,<sp/>array1<sp/>%<sp/>q1,<sp/>array2<sp/>%<sp/>q0,<sp/>array3<sp/>%</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>q1]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@note<sp/>Total<sp/>generated<sp/>random<sp/>number<sp/>count<sp/>=<sp/>(2^log_size)<sp/>x<sp/>mod_count</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>x<sp/>repeat_count</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__host__<sp/>void<sp/>modular_uniform_random_number_generation(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data64*<sp/>pointer,<sp/>Modulus64*<sp/>modulus,<sp/>Data64<sp/>log_size,<sp/>int<sp/>mod_count,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>repeat_count,<sp/>std::vector&lt;unsigned<sp/>char&gt;&amp;<sp/>entropy_input,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>char&gt;<sp/>additional_input,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream<sp/>=<sp/>cudaStreamDefault);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Generates<sp/>modular<sp/>uniform<sp/>random<sp/>numbers<sp/>according<sp/>to<sp/>given</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>modulo<sp/>order.<sp/>(From<sp/>RNGonGPU<sp/>Library)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>function<sp/>produces<sp/>uniform<sp/>random<sp/>numbers<sp/>that<sp/>are<sp/>reduced<sp/>modulo</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>a<sp/>given<sp/>modulo<sp/>order.<sp/>The<sp/>numbers<sp/>are<sp/>written<sp/>to<sp/>the<sp/>memory<sp/>pointed</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>by<sp/>@p<sp/>pointer,<sp/>which<sp/>must<sp/>reside<sp/>on<sp/>the<sp/>GPU<sp/>or<sp/>in<sp/>unified<sp/>memory.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>the<sp/>pointer<sp/>does<sp/>not<sp/>reference<sp/>GPU<sp/>or<sp/>unified<sp/>memory,<sp/>an<sp/>error<sp/>is</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>thrown.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>pointer<sp/>Pointer<sp/>to<sp/>the<sp/>memory<sp/>for<sp/>storing<sp/>random<sp/>numbers</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(device<sp/>or<sp/>unified<sp/>memory<sp/>required).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>modulus<sp/>The<sp/>modulus<sp/>used<sp/>to<sp/>reduce<sp/>the<sp/>generated<sp/>random</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>numbers<sp/>(device<sp/>or<sp/>unified<sp/>memory<sp/>required).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>log_size<sp/>The<sp/>log<sp/>domain<sp/>number<sp/>of<sp/>random<sp/>numbers<sp/>to<sp/>generate.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(log_size<sp/>should<sp/>be<sp/>power<sp/>of<sp/>2)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>mod_count<sp/>The<sp/>mod<sp/>count<sp/>indicates<sp/>how<sp/>many<sp/>different<sp/>moduli</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>are<sp/>used.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>mod_index<sp/>The<sp/>mod<sp/>index<sp/>indicates<sp/>which<sp/>modules<sp/>are<sp/>used</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(device<sp/>or<sp/>unified<sp/>memory<sp/>required).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>repeat_count<sp/>The<sp/>repeat<sp/>count<sp/>indicates<sp/>how<sp/>many<sp/>times<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>modulus<sp/>order<sp/>is<sp/>repeated.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@example</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>example1:<sp/>each<sp/>array<sp/>size<sp/>=<sp/>2^log_size,<sp/>mod_count<sp/>=<sp/>2,<sp/>repeat_count<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>modulus<sp/>order:<sp/>[<sp/><sp/>q0<sp/>,<sp/><sp/><sp/>q1<sp/>,<sp/><sp/><sp/>q2<sp/>,<sp/><sp/><sp/>q3<sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>mod_index<sp/><sp/><sp/><sp/>:<sp/>[<sp/><sp/>0<sp/><sp/><sp/>,<sp/><sp/><sp/><sp/>2<sp/><sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>array<sp/>order<sp/><sp/>:<sp/>[array0,<sp/>array1]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>output<sp/>array<sp/>:<sp/>[array0<sp/>%<sp/>q0,<sp/>array1<sp/>%<sp/>q2]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>example2:<sp/>each<sp/>array<sp/>size<sp/>=<sp/>2^log_size,<sp/>mod_count<sp/>=<sp/>2,<sp/>repeat_count<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>2</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>modulus<sp/>order:<sp/>[<sp/><sp/>q0<sp/>,<sp/><sp/><sp/>q1<sp/>,<sp/><sp/><sp/>q2<sp/>,<sp/><sp/><sp/>q3<sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>mod_index<sp/><sp/><sp/><sp/>:<sp/>[<sp/><sp/>0<sp/><sp/><sp/>,<sp/><sp/><sp/><sp/>3<sp/><sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>array<sp/>order<sp/><sp/>:<sp/>[array0,<sp/>array1,<sp/>array2,<sp/>array3]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>output<sp/>array<sp/>:<sp/>[array0<sp/>%<sp/>q0,<sp/>array1<sp/>%<sp/>q3,<sp/>array2<sp/>%<sp/>q0,<sp/>array3<sp/>%</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>q3]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@note<sp/>Total<sp/>generated<sp/>random<sp/>number<sp/>count<sp/>=<sp/>(2^log_size)<sp/>x<sp/>mod_count</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>x<sp/>repeat_count</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__host__<sp/>void<sp/>modular_uniform_random_number_generation(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data64*<sp/>pointer,<sp/>Modulus64*<sp/>modulus,<sp/>Data64<sp/>log_size,<sp/>int<sp/>mod_count,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int*<sp/>mod_index,<sp/>int<sp/>repeat_count,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream<sp/>=<sp/>cudaStreamDefault);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Generates<sp/>modular<sp/>uniform<sp/>random<sp/>numbers<sp/>according<sp/>to<sp/>given</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>modulo<sp/>order.<sp/>(From<sp/>RNGonGPU<sp/>Library)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>function<sp/>produces<sp/>uniform<sp/>random<sp/>numbers<sp/>that<sp/>are<sp/>reduced<sp/>modulo</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>a<sp/>given<sp/>modulo<sp/>order.<sp/>The<sp/>numbers<sp/>are<sp/>written<sp/>to<sp/>the<sp/>memory<sp/>pointed</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>by<sp/>@p<sp/>pointer,<sp/>which<sp/>must<sp/>reside<sp/>on<sp/>the<sp/>GPU<sp/>or<sp/>in<sp/>unified<sp/>memory.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>the<sp/>pointer<sp/>does<sp/>not<sp/>reference<sp/>GPU<sp/>or<sp/>unified<sp/>memory,<sp/>an<sp/>error<sp/>is</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>thrown.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>pointer<sp/>Pointer<sp/>to<sp/>the<sp/>memory<sp/>for<sp/>storing<sp/>random<sp/>numbers</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(device<sp/>or<sp/>unified<sp/>memory<sp/>required).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>modulus<sp/>The<sp/>modulus<sp/>used<sp/>to<sp/>reduce<sp/>the<sp/>generated<sp/>random</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>numbers<sp/>(device<sp/>or<sp/>unified<sp/>memory<sp/>required).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>log_size<sp/>The<sp/>log<sp/>domain<sp/>number<sp/>of<sp/>random<sp/>numbers<sp/>to<sp/>generate.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(log_size<sp/>should<sp/>be<sp/>power<sp/>of<sp/>2)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>mod_count<sp/>The<sp/>mod<sp/>count<sp/>indicates<sp/>how<sp/>many<sp/>different<sp/>moduli</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>are<sp/>used.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>mod_index<sp/>The<sp/>mod<sp/>index<sp/>indicates<sp/>which<sp/>modules<sp/>are<sp/>used</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(device<sp/>or<sp/>unified<sp/>memory<sp/>required).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>repeat_count<sp/>The<sp/>repeat<sp/>count<sp/>indicates<sp/>how<sp/>many<sp/>times<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>modulus<sp/>order<sp/>is<sp/>repeated.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>entropy_input<sp/>The<sp/>entropy<sp/>input<sp/>string<sp/>of<sp/>bits<sp/>obtained<sp/>from</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>randomness<sp/>source.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>additional_input<sp/>The<sp/>additional<sp/>input<sp/>string<sp/>received<sp/>from<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>consuming<sp/>application.<sp/>Note<sp/>that<sp/>the<sp/>length<sp/>of<sp/>the<sp/>additional_input</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>string<sp/>may<sp/>be<sp/>zero.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@example</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>example1:<sp/>each<sp/>array<sp/>size<sp/>=<sp/>2^log_size,<sp/>mod_count<sp/>=<sp/>2,<sp/>repeat_count<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>modulus<sp/>order:<sp/>[<sp/><sp/>q0<sp/>,<sp/><sp/><sp/>q1<sp/>,<sp/><sp/><sp/>q2<sp/>,<sp/><sp/><sp/>q3<sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>mod_index<sp/><sp/><sp/><sp/>:<sp/>[<sp/><sp/>0<sp/><sp/><sp/>,<sp/><sp/><sp/><sp/>2<sp/><sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>array<sp/>order<sp/><sp/>:<sp/>[array0,<sp/>array1]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>output<sp/>array<sp/>:<sp/>[array0<sp/>%<sp/>q0,<sp/>array1<sp/>%<sp/>q2]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>example2:<sp/>each<sp/>array<sp/>size<sp/>=<sp/>2^log_size,<sp/>mod_count<sp/>=<sp/>2,<sp/>repeat_count<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>2</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>modulus<sp/>order:<sp/>[<sp/><sp/>q0<sp/>,<sp/><sp/><sp/>q1<sp/>,<sp/><sp/><sp/>q2<sp/>,<sp/><sp/><sp/>q3<sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>mod_index<sp/><sp/><sp/><sp/>:<sp/>[<sp/><sp/>0<sp/><sp/><sp/>,<sp/><sp/><sp/><sp/>3<sp/><sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>array<sp/>order<sp/><sp/>:<sp/>[array0,<sp/>array1,<sp/>array2,<sp/>array3]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>output<sp/>array<sp/>:<sp/>[array0<sp/>%<sp/>q0,<sp/>array1<sp/>%<sp/>q3,<sp/>array2<sp/>%<sp/>q0,<sp/>array3<sp/>%</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>q3]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@note<sp/>Total<sp/>generated<sp/>random<sp/>number<sp/>count<sp/>=<sp/>(2^log_size)<sp/>x<sp/>mod_count</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>x<sp/>repeat_count</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__host__<sp/>void<sp/>modular_uniform_random_number_generation(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data64*<sp/>pointer,<sp/>Modulus64*<sp/>modulus,<sp/>Data64<sp/>log_size,<sp/>int<sp/>mod_count,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int*<sp/>mod_index,<sp/>int<sp/>repeat_count,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>char&gt;&amp;<sp/>entropy_input,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>char&gt;<sp/>additional_input,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream<sp/>=<sp/>cudaStreamDefault);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Generates<sp/>Gaussian-distributed<sp/>random<sp/>numbers<sp/>in<sp/>given<sp/>modulo</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>order.<sp/>(From<sp/>RNGonGPU<sp/>Library)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>function<sp/>produces<sp/>Gaussian-distributed<sp/>random<sp/>numbers<sp/>that<sp/>are</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>reduced<sp/>modulo<sp/>a<sp/>given<sp/>modulo<sp/>order.<sp/>The<sp/>numbers<sp/>are<sp/>written<sp/>to<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>memory<sp/>pointed<sp/>to<sp/>by<sp/>@p<sp/>pointer,<sp/>which<sp/>must<sp/>reside<sp/>on<sp/>the<sp/>GPU<sp/>or<sp/>in</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>unified<sp/>memory.<sp/>If<sp/>the<sp/>pointer<sp/>does<sp/>not<sp/>reference<sp/>GPU<sp/>or<sp/>unified</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>memory,<sp/>an<sp/>error<sp/>is<sp/>thrown.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>std_dev<sp/>Standart<sp/>deviation.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>pointer<sp/>Pointer<sp/>to<sp/>the<sp/>memory<sp/>for<sp/>storing<sp/>random<sp/>numbers</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(device<sp/>or<sp/>unified<sp/>memory<sp/>required).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>modulus<sp/>The<sp/>modulus<sp/>used<sp/>to<sp/>reduce<sp/>the<sp/>generated<sp/>random</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>numbers<sp/>(device<sp/>or<sp/>unified<sp/>memory<sp/>required).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>log_size<sp/>The<sp/>log<sp/>domain<sp/>number<sp/>of<sp/>random<sp/>numbers<sp/>to<sp/>generate.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(log_size<sp/>should<sp/>be<sp/>power<sp/>of<sp/>2)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>mod_count<sp/>The<sp/>mod<sp/>count<sp/>indicates<sp/>how<sp/>many<sp/>different<sp/>moduli</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>are<sp/>used.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>repeat_count<sp/>The<sp/>repeat<sp/>count<sp/>indicates<sp/>how<sp/>many<sp/>times<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>modulus<sp/>order<sp/>is<sp/>repeated.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@example</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>example1:<sp/>each<sp/>array<sp/>size<sp/>=<sp/>2^log_size,<sp/>mod_count<sp/>=<sp/>3,<sp/>repeat_count<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>modulus<sp/>order:<sp/>[<sp/><sp/>q0<sp/>,<sp/><sp/><sp/>q1<sp/>,<sp/><sp/><sp/>q2<sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>array<sp/>order<sp/><sp/>:<sp/>[array0]<sp/>since<sp/>repeat_count<sp/>=<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>output<sp/>array<sp/>:<sp/>[array0<sp/>%<sp/>q0,<sp/>array0<sp/>%<sp/>q1,<sp/>array0<sp/>%<sp/>q2]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>example2:<sp/>each<sp/>array<sp/>size<sp/>=<sp/>2^log_size,<sp/>mod_count<sp/>=<sp/>2,<sp/>repeat_count<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>2</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>modulus<sp/>order:<sp/>[<sp/><sp/>q0<sp/>,<sp/><sp/><sp/>q1<sp/>,<sp/><sp/><sp/>q2<sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>array<sp/>order<sp/><sp/>:<sp/>[array0,<sp/>array1]<sp/>since<sp/>repeat_count<sp/>=<sp/>2</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>output<sp/>array<sp/>:<sp/>[array0<sp/>%<sp/>q0,<sp/>array0<sp/>%<sp/>q1,<sp/>array1<sp/>%<sp/>q0,<sp/>array1<sp/>%</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>q1]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@note<sp/>Total<sp/>generated<sp/>random<sp/>number<sp/>count<sp/>=<sp/>(2^log_size)<sp/>x<sp/>mod_count</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>x<sp/>repeat_count</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__host__<sp/>void<sp/>modular_gaussian_random_number_generation(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Float64<sp/>std_dev,<sp/>Data64*<sp/>pointer,<sp/>Modulus64*<sp/>modulus,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data64<sp/>log_size,<sp/>int<sp/>mod_count,<sp/>int<sp/>repeat_count,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream<sp/>=<sp/>cudaStreamDefault);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Generates<sp/>Gaussian-distributed<sp/>random<sp/>numbers<sp/>in<sp/>given<sp/>modulo</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>order.<sp/>(From<sp/>RNGonGPU<sp/>Library)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>function<sp/>produces<sp/>Gaussian-distributed<sp/>random<sp/>numbers<sp/>that<sp/>are</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>reduced<sp/>modulo<sp/>a<sp/>given<sp/>modulo<sp/>order.<sp/>The<sp/>numbers<sp/>are<sp/>written<sp/>to<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>memory<sp/>pointed<sp/>to<sp/>by<sp/>@p<sp/>pointer,<sp/>which<sp/>must<sp/>reside<sp/>on<sp/>the<sp/>GPU<sp/>or<sp/>in</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>unified<sp/>memory.<sp/>If<sp/>the<sp/>pointer<sp/>does<sp/>not<sp/>reference<sp/>GPU<sp/>or<sp/>unified</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>memory,<sp/>an<sp/>error<sp/>is<sp/>thrown.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>std_dev<sp/>Standart<sp/>deviation.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>pointer<sp/>Pointer<sp/>to<sp/>the<sp/>memory<sp/>for<sp/>storing<sp/>random<sp/>numbers</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(device<sp/>or<sp/>unified<sp/>memory<sp/>required).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>modulus<sp/>The<sp/>modulus<sp/>used<sp/>to<sp/>reduce<sp/>the<sp/>generated<sp/>random</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>numbers<sp/>(device<sp/>or<sp/>unified<sp/>memory<sp/>required).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>log_size<sp/>The<sp/>log<sp/>domain<sp/>number<sp/>of<sp/>random<sp/>numbers<sp/>to<sp/>generate.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(log_size<sp/>should<sp/>be<sp/>power<sp/>of<sp/>2)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>mod_count<sp/>The<sp/>mod<sp/>count<sp/>indicates<sp/>how<sp/>many<sp/>different<sp/>moduli</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>are<sp/>used.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>repeat_count<sp/>The<sp/>repeat<sp/>count<sp/>indicates<sp/>how<sp/>many<sp/>times<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>modulus<sp/>order<sp/>is<sp/>repeated.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>entropy_input<sp/>The<sp/>entropy<sp/>input<sp/>string<sp/>of<sp/>bits<sp/>obtained<sp/>from</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>randomness<sp/>source.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>additional_input<sp/>The<sp/>additional<sp/>input<sp/>string<sp/>received<sp/>from<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>consuming<sp/>application.<sp/>Note<sp/>that<sp/>the<sp/>length<sp/>of<sp/>the<sp/>additional_input</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>string<sp/>may<sp/>be<sp/>zero.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@example</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>example1:<sp/>each<sp/>array<sp/>size<sp/>=<sp/>2^log_size,<sp/>mod_count<sp/>=<sp/>3,<sp/>repeat_count<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>modulus<sp/>order:<sp/>[<sp/><sp/>q0<sp/>,<sp/><sp/><sp/>q1<sp/>,<sp/><sp/><sp/>q2<sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>array<sp/>order<sp/><sp/>:<sp/>[array0]<sp/>since<sp/>repeat_count<sp/>=<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>output<sp/>array<sp/>:<sp/>[array0<sp/>%<sp/>q0,<sp/>array0<sp/>%<sp/>q1,<sp/>array0<sp/>%<sp/>q2]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>example2:<sp/>each<sp/>array<sp/>size<sp/>=<sp/>2^log_size,<sp/>mod_count<sp/>=<sp/>2,<sp/>repeat_count<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>2</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>array<sp/>order<sp/><sp/>:<sp/>[array0,<sp/>array1]<sp/>since<sp/>repeat_count<sp/>=<sp/>2</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>modulus<sp/>order:<sp/>[<sp/><sp/>q0<sp/>,<sp/><sp/><sp/>q1<sp/>,<sp/><sp/><sp/>q2<sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>output<sp/>array<sp/>:<sp/>[array0<sp/>%<sp/>q0,<sp/>array0<sp/>%<sp/>q1,<sp/>array1<sp/>%<sp/>q0,<sp/>array1<sp/>%</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>q1]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@note<sp/>Total<sp/>generated<sp/>random<sp/>number<sp/>count<sp/>=<sp/>(2^log_size)<sp/>x<sp/>mod_count</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>x<sp/>repeat_count</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__host__<sp/>void<sp/>modular_gaussian_random_number_generation(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Float64<sp/>std_dev,<sp/>Data64*<sp/>pointer,<sp/>Modulus64*<sp/>modulus,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data64<sp/>log_size,<sp/>int<sp/>mod_count,<sp/>int<sp/>repeat_count,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>char&gt;&amp;<sp/>entropy_input,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>char&gt;<sp/>additional_input,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream<sp/>=<sp/>cudaStreamDefault);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Generates<sp/>Gaussian-distributed<sp/>random<sp/>numbers<sp/>in<sp/>given<sp/>modulo</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>order.<sp/>(From<sp/>RNGonGPU<sp/>Library)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>function<sp/>produces<sp/>Gaussian-distributed<sp/>random<sp/>numbers<sp/>that<sp/>are</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>reduced<sp/>modulo<sp/>a<sp/>given<sp/>modulo<sp/>order.<sp/>The<sp/>numbers<sp/>are<sp/>written<sp/>to<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>memory<sp/>pointed<sp/>to<sp/>by<sp/>@p<sp/>pointer,<sp/>which<sp/>must<sp/>reside<sp/>on<sp/>the<sp/>GPU<sp/>or<sp/>in</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>unified<sp/>memory.<sp/>If<sp/>the<sp/>pointer<sp/>does<sp/>not<sp/>reference<sp/>GPU<sp/>or<sp/>unified</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>memory,<sp/>an<sp/>error<sp/>is<sp/>thrown.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>std_dev<sp/>Standart<sp/>deviation.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>pointer<sp/>Pointer<sp/>to<sp/>the<sp/>memory<sp/>for<sp/>storing<sp/>random<sp/>numbers</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(device<sp/>or<sp/>unified<sp/>memory<sp/>required).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>modulus<sp/>The<sp/>modulus<sp/>used<sp/>to<sp/>reduce<sp/>the<sp/>generated<sp/>random</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>numbers<sp/>(device<sp/>or<sp/>unified<sp/>memory<sp/>required).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>log_size<sp/>The<sp/>log<sp/>domain<sp/>number<sp/>of<sp/>random<sp/>numbers<sp/>to<sp/>generate.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(log_size<sp/>should<sp/>be<sp/>power<sp/>of<sp/>2)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>mod_count<sp/>The<sp/>mod<sp/>count<sp/>indicates<sp/>how<sp/>many<sp/>different<sp/>moduli</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>are<sp/>used.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>mod_index<sp/>The<sp/>mod<sp/>index<sp/>indicates<sp/>which<sp/>modules<sp/>are<sp/>used</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(device<sp/>or<sp/>unified<sp/>memory<sp/>required).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>repeat_count<sp/>The<sp/>repeat<sp/>count<sp/>indicates<sp/>how<sp/>many<sp/>times<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>modulus<sp/>order<sp/>is<sp/>repeated.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@example</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>example1:<sp/>each<sp/>array<sp/>size<sp/>=<sp/>2^log_size,<sp/>mod_count<sp/>=<sp/>2,<sp/>repeat_count<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>modulus<sp/>order:<sp/>[<sp/><sp/>q0<sp/>,<sp/><sp/><sp/>q1<sp/>,<sp/><sp/><sp/>q2<sp/>,<sp/><sp/><sp/>q3<sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>mod_index<sp/><sp/><sp/><sp/>:<sp/>[<sp/><sp/>0<sp/><sp/><sp/>,<sp/><sp/><sp/><sp/>2<sp/><sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>array<sp/>order<sp/><sp/>:<sp/>[array0]<sp/>since<sp/>repeat_count<sp/>=<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>output<sp/>array<sp/>:<sp/>[array0<sp/>%<sp/>q0,<sp/>array0<sp/>%<sp/>q2]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>example2:<sp/>each<sp/>array<sp/>size<sp/>=<sp/>2^log_size,<sp/>mod_count<sp/>=<sp/>2,<sp/>repeat_count<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>2</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>modulus<sp/>order:<sp/>[<sp/><sp/>q0<sp/>,<sp/><sp/><sp/>q1<sp/>,<sp/><sp/><sp/>q2<sp/>,<sp/><sp/><sp/>q3<sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>mod_index<sp/><sp/><sp/><sp/>:<sp/>[<sp/><sp/>0<sp/><sp/><sp/>,<sp/><sp/><sp/><sp/>3<sp/><sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>array<sp/>order<sp/><sp/>:<sp/>[array0,<sp/>array1]<sp/>since<sp/>repeat_count<sp/>=<sp/>2</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>output<sp/>array<sp/>:<sp/>[array0<sp/>%<sp/>q0,<sp/>array0<sp/>%<sp/>q3,<sp/>array1<sp/>%<sp/>q0,<sp/>array1<sp/>%</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>q3]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@note<sp/>Total<sp/>generated<sp/>random<sp/>number<sp/>count<sp/>=<sp/>(2^log_size)<sp/>x<sp/>mod_count</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>x<sp/>repeat_count</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__host__<sp/>void<sp/>modular_gaussian_random_number_generation(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Float64<sp/>std_dev,<sp/>Data64*<sp/>pointer,<sp/>Modulus64*<sp/>modulus,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data64<sp/>log_size,<sp/>int<sp/>mod_count,<sp/>int*<sp/>mod_index,<sp/>int<sp/>repeat_count,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream<sp/>=<sp/>cudaStreamDefault);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Generates<sp/>Gaussian-distributed<sp/>random<sp/>numbers<sp/>in<sp/>given<sp/>modulo</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>order.<sp/>(From<sp/>RNGonGPU<sp/>Library)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>function<sp/>produces<sp/>Gaussian-distributed<sp/>random<sp/>numbers<sp/>that<sp/>are</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>reduced<sp/>modulo<sp/>a<sp/>given<sp/>modulo<sp/>order.<sp/>The<sp/>numbers<sp/>are<sp/>written<sp/>to<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>memory<sp/>pointed<sp/>to<sp/>by<sp/>@p<sp/>pointer,<sp/>which<sp/>must<sp/>reside<sp/>on<sp/>the<sp/>GPU<sp/>or<sp/>in</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>unified<sp/>memory.<sp/>If<sp/>the<sp/>pointer<sp/>does<sp/>not<sp/>reference<sp/>GPU<sp/>or<sp/>unified</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>memory,<sp/>an<sp/>error<sp/>is<sp/>thrown.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>std_dev<sp/>Standart<sp/>deviation.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>pointer<sp/>Pointer<sp/>to<sp/>the<sp/>memory<sp/>for<sp/>storing<sp/>random<sp/>numbers</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(device<sp/>or<sp/>unified<sp/>memory<sp/>required).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>modulus<sp/>The<sp/>modulus<sp/>used<sp/>to<sp/>reduce<sp/>the<sp/>generated<sp/>random</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>numbers<sp/>(device<sp/>or<sp/>unified<sp/>memory<sp/>required).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>log_size<sp/>The<sp/>log<sp/>domain<sp/>number<sp/>of<sp/>random<sp/>numbers<sp/>to<sp/>generate.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(log_size<sp/>should<sp/>be<sp/>power<sp/>of<sp/>2)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>mod_count<sp/>The<sp/>mod<sp/>count<sp/>indicates<sp/>how<sp/>many<sp/>different<sp/>moduli</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>are<sp/>used.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>mod_index<sp/>The<sp/>mod<sp/>index<sp/>indicates<sp/>which<sp/>modules<sp/>are<sp/>used</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(device<sp/>or<sp/>unified<sp/>memory<sp/>required).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>repeat_count<sp/>The<sp/>repeat<sp/>count<sp/>indicates<sp/>how<sp/>many<sp/>times<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>modulus<sp/>order<sp/>is<sp/>repeated.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>entropy_input<sp/>The<sp/>entropy<sp/>input<sp/>string<sp/>of<sp/>bits<sp/>obtained<sp/>from</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>randomness<sp/>source.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>additional_input<sp/>The<sp/>additional<sp/>input<sp/>string<sp/>received<sp/>from<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>consuming<sp/>application.<sp/>Note<sp/>that<sp/>the<sp/>length<sp/>of<sp/>the<sp/>additional_input</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>string<sp/>may<sp/>be<sp/>zero.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@note<sp/><sp/>If<sp/>needed,<sp/>an<sp/>entropy<sp/>input<sp/>is<sp/>generated<sp/>randomly<sp/>within<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>function.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@example</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>example1:<sp/>each<sp/>array<sp/>size<sp/>=<sp/>2^log_size,<sp/>mod_count<sp/>=<sp/>2,<sp/>repeat_count<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>modulus<sp/>order:<sp/>[<sp/><sp/>q0<sp/>,<sp/><sp/><sp/>q1<sp/>,<sp/><sp/><sp/>q2<sp/>,<sp/><sp/><sp/>q3<sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>mod_index<sp/><sp/><sp/><sp/>:<sp/>[<sp/><sp/>0<sp/><sp/><sp/>,<sp/><sp/><sp/><sp/>2<sp/><sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>array<sp/>order<sp/><sp/>:<sp/>[array0]<sp/>since<sp/>repeat_count<sp/>=<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>output<sp/>array<sp/>:<sp/>[array0<sp/>%<sp/>q0,<sp/>array0<sp/>%<sp/>q2]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>example2:<sp/>each<sp/>array<sp/>size<sp/>=<sp/>2^log_size,<sp/>mod_count<sp/>=<sp/>2,<sp/>repeat_count<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>2</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>modulus<sp/>order:<sp/>[<sp/><sp/>q0<sp/>,<sp/><sp/><sp/>q1<sp/>,<sp/><sp/><sp/>q2<sp/>,<sp/><sp/><sp/>q3<sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>mod_index<sp/><sp/><sp/><sp/>:<sp/>[<sp/><sp/>0<sp/><sp/><sp/>,<sp/><sp/><sp/><sp/>3<sp/><sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>array<sp/>order<sp/><sp/>:<sp/>[array0,<sp/>array1]<sp/>since<sp/>repeat_count<sp/>=<sp/>2</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>output<sp/>array<sp/>:<sp/>[array0<sp/>%<sp/>q0,<sp/>array0<sp/>%<sp/>q3,<sp/>array1<sp/>%<sp/>q0,<sp/>array1<sp/>%</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>q3]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@note<sp/>Total<sp/>generated<sp/>random<sp/>number<sp/>count<sp/>=<sp/>(2^log_size)<sp/>x<sp/>mod_count</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>x<sp/>repeat_count</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__host__<sp/>void<sp/>modular_gaussian_random_number_generation(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Float64<sp/>std_dev,<sp/>Data64*<sp/>pointer,<sp/>Modulus64*<sp/>modulus,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data64<sp/>log_size,<sp/>int<sp/>mod_count,<sp/>int*<sp/>mod_index,<sp/>int<sp/>repeat_count,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>char&gt;&amp;<sp/>entropy_input,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>char&gt;<sp/>additional_input,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream<sp/>=<sp/>cudaStreamDefault);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Generates<sp/>Ternary-distributed<sp/>random<sp/>numbers<sp/>in<sp/>given<sp/>modulo</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>order.(-1,0,1)<sp/>(From<sp/>RNGonGPU<sp/>Library)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>function<sp/>produces<sp/>Ternary-distributed<sp/>random<sp/>numbers<sp/>that<sp/>are</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>reduced<sp/>modulo<sp/>a<sp/>given<sp/>modulo<sp/>order.<sp/>The<sp/>numbers<sp/>are<sp/>written<sp/>to<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>memory<sp/>pointed<sp/>to<sp/>by<sp/>@p<sp/>pointer,<sp/>which<sp/>must<sp/>reside<sp/>on<sp/>the<sp/>GPU<sp/>or<sp/>in</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>unified<sp/>memory.<sp/>If<sp/>the<sp/>pointer<sp/>does<sp/>not<sp/>reference<sp/>GPU<sp/>or<sp/>unified</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>memory,<sp/>an<sp/>error<sp/>is<sp/>thrown.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>pointer<sp/>Pointer<sp/>to<sp/>the<sp/>memory<sp/>for<sp/>storing<sp/>random<sp/>numbers</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(device<sp/>or<sp/>unified<sp/>memory<sp/>required).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>modulus<sp/>The<sp/>modulus<sp/>used<sp/>to<sp/>reduce<sp/>the<sp/>generated<sp/>random</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>numbers<sp/>(device<sp/>or<sp/>unified<sp/>memory<sp/>required).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>log_size<sp/>The<sp/>log<sp/>domain<sp/>number<sp/>of<sp/>random<sp/>numbers<sp/>to<sp/>generate.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(log_size<sp/>should<sp/>be<sp/>power<sp/>of<sp/>2)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>mod_count<sp/>The<sp/>mod<sp/>count<sp/>indicates<sp/>how<sp/>many<sp/>different<sp/>moduli</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>are<sp/>used.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>repeat_count<sp/>The<sp/>repeat<sp/>count<sp/>indicates<sp/>how<sp/>many<sp/>times<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>modulus<sp/>order<sp/>is<sp/>repeated.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@example</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>example1:<sp/>each<sp/>array<sp/>size<sp/>=<sp/>2^log_size,<sp/>mod_count<sp/>=<sp/>3,<sp/>repeat_count<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>modulus<sp/>order:<sp/>[<sp/><sp/>q0<sp/>,<sp/><sp/><sp/>q1<sp/>,<sp/><sp/><sp/>q2<sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>array<sp/>order<sp/><sp/>:<sp/>[array0]<sp/>since<sp/>repeat_count<sp/>=<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>output<sp/>array<sp/>:<sp/>[array0<sp/>%<sp/>q0,<sp/>array0<sp/>%<sp/>q1,<sp/>array0<sp/>%<sp/>q2]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>example2:<sp/>each<sp/>array<sp/>size<sp/>=<sp/>2^log_size,<sp/>mod_count<sp/>=<sp/>2,<sp/>repeat_count<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>2</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>modulus<sp/>order:<sp/>[<sp/><sp/>q0<sp/>,<sp/><sp/><sp/>q1<sp/>,<sp/><sp/><sp/>q2<sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>array<sp/>order<sp/><sp/>:<sp/>[array0,<sp/>array1]<sp/>since<sp/>repeat_count<sp/>=<sp/>2</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>output<sp/>array<sp/>:<sp/>[array0<sp/>%<sp/>q0,<sp/>array0<sp/>%<sp/>q1,<sp/>array1<sp/>%<sp/>q0,<sp/>array1<sp/>%</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>q1]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@note<sp/>Total<sp/>generated<sp/>random<sp/>number<sp/>count<sp/>=<sp/>(2^log_size)<sp/>x<sp/>mod_count</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>x<sp/>repeat_count</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__host__<sp/>void<sp/>modular_ternary_random_number_generation(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data64*<sp/>pointer,<sp/>Modulus64*<sp/>modulus,<sp/>Data64<sp/>log_size,<sp/>int<sp/>mod_count,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>repeat_count,<sp/>cudaStream_t<sp/>stream<sp/>=<sp/>cudaStreamDefault);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Generates<sp/>Ternary-distributed<sp/>random<sp/>numbers<sp/>in<sp/>given<sp/>modulo</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>order.(-1,0,1)<sp/>(From<sp/>RNGonGPU<sp/>Library)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>function<sp/>produces<sp/>Ternary-distributed<sp/>random<sp/>numbers<sp/>that<sp/>are</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>reduced<sp/>modulo<sp/>a<sp/>given<sp/>modulo<sp/>order.<sp/>The<sp/>numbers<sp/>are<sp/>written<sp/>to<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>memory<sp/>pointed<sp/>to<sp/>by<sp/>@p<sp/>pointer,<sp/>which<sp/>must<sp/>reside<sp/>on<sp/>the<sp/>GPU<sp/>or<sp/>in</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>unified<sp/>memory.<sp/>If<sp/>the<sp/>pointer<sp/>does<sp/>not<sp/>reference<sp/>GPU<sp/>or<sp/>unified</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>memory,<sp/>an<sp/>error<sp/>is<sp/>thrown.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>pointer<sp/>Pointer<sp/>to<sp/>the<sp/>memory<sp/>for<sp/>storing<sp/>random<sp/>numbers</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(device<sp/>or<sp/>unified<sp/>memory<sp/>required).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>modulus<sp/>The<sp/>modulus<sp/>used<sp/>to<sp/>reduce<sp/>the<sp/>generated<sp/>random</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>numbers<sp/>(device<sp/>or<sp/>unified<sp/>memory<sp/>required).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>log_size<sp/>The<sp/>log<sp/>domain<sp/>number<sp/>of<sp/>random<sp/>numbers<sp/>to<sp/>generate.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(log_size<sp/>should<sp/>be<sp/>power<sp/>of<sp/>2)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>mod_count<sp/>The<sp/>mod<sp/>count<sp/>indicates<sp/>how<sp/>many<sp/>different<sp/>moduli</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>are<sp/>used.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>repeat_count<sp/>The<sp/>repeat<sp/>count<sp/>indicates<sp/>how<sp/>many<sp/>times<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>modulus<sp/>order<sp/>is<sp/>repeated.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>entropy_input<sp/>The<sp/>entropy<sp/>input<sp/>string<sp/>of<sp/>bits<sp/>obtained<sp/>from</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>randomness<sp/>source.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>additional_input<sp/>The<sp/>additional<sp/>input<sp/>string<sp/>received<sp/>from<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>consuming<sp/>application.<sp/>Note<sp/>that<sp/>the<sp/>length<sp/>of<sp/>the<sp/>additional_input</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>string<sp/>may<sp/>be<sp/>zero.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@example</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>example1:<sp/>each<sp/>array<sp/>size<sp/>=<sp/>2^log_size,<sp/>mod_count<sp/>=<sp/>3,<sp/>repeat_count<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>modulus<sp/>order:<sp/>[<sp/><sp/>q0<sp/>,<sp/><sp/><sp/>q1<sp/>,<sp/><sp/><sp/>q2<sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>array<sp/>order<sp/><sp/>:<sp/>[array0]<sp/>since<sp/>repeat_count<sp/>=<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>output<sp/>array<sp/>:<sp/>[array0<sp/>%<sp/>q0,<sp/>array0<sp/>%<sp/>q1,<sp/>array0<sp/>%<sp/>q2]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>example2:<sp/>each<sp/>array<sp/>size<sp/>=<sp/>2^log_size,<sp/>mod_count<sp/>=<sp/>2,<sp/>repeat_count<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>2</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>modulus<sp/>order:<sp/>[<sp/><sp/>q0<sp/>,<sp/><sp/><sp/>q1<sp/>,<sp/><sp/><sp/>q2<sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>array<sp/>order<sp/><sp/>:<sp/>[array0,<sp/>array1]<sp/>since<sp/>repeat_count<sp/>=<sp/>2</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>output<sp/>array<sp/>:<sp/>[array0<sp/>%<sp/>q0,<sp/>array0<sp/>%<sp/>q1,<sp/>array1<sp/>%<sp/>q0,<sp/>array1<sp/>%</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>q1]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@note<sp/>Total<sp/>generated<sp/>random<sp/>number<sp/>count<sp/>=<sp/>(2^log_size)<sp/>x<sp/>mod_count</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>x<sp/>repeat_count</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__host__<sp/>void<sp/>modular_ternary_random_number_generation(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data64*<sp/>pointer,<sp/>Modulus64*<sp/>modulus,<sp/>Data64<sp/>log_size,<sp/>int<sp/>mod_count,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>repeat_count,<sp/>std::vector&lt;unsigned<sp/>char&gt;&amp;<sp/>entropy_input,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>char&gt;<sp/>additional_input,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream<sp/>=<sp/>cudaStreamDefault);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Generates<sp/>Ternary-distributed<sp/>random<sp/>numbers<sp/>in<sp/>given<sp/>modulo</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>order.<sp/>(-1,0,1)<sp/>(From<sp/>RNGonGPU<sp/>Library)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>function<sp/>produces<sp/>Ternary-distributed<sp/>random<sp/>numbers<sp/>that<sp/>are</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>reduced<sp/>modulo<sp/>a<sp/>given<sp/>modulo<sp/>order.<sp/>The<sp/>numbers<sp/>are<sp/>written<sp/>to<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>memory<sp/>pointed<sp/>to<sp/>by<sp/>@p<sp/>pointer,<sp/>which<sp/>must<sp/>reside<sp/>on<sp/>the<sp/>GPU<sp/>or<sp/>in</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>unified<sp/>memory.<sp/>If<sp/>the<sp/>pointer<sp/>does<sp/>not<sp/>reference<sp/>GPU<sp/>or<sp/>unified</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>memory,<sp/>an<sp/>error<sp/>is<sp/>thrown.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>pointer<sp/>Pointer<sp/>to<sp/>the<sp/>memory<sp/>for<sp/>storing<sp/>random<sp/>numbers</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(device<sp/>or<sp/>unified<sp/>memory<sp/>required).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>modulus<sp/>The<sp/>modulus<sp/>used<sp/>to<sp/>reduce<sp/>the<sp/>generated<sp/>random</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>numbers<sp/>(device<sp/>or<sp/>unified<sp/>memory<sp/>required).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>log_size<sp/>The<sp/>log<sp/>domain<sp/>number<sp/>of<sp/>random<sp/>numbers<sp/>to<sp/>generate.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(log_size<sp/>should<sp/>be<sp/>power<sp/>of<sp/>2)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>mod_count<sp/>The<sp/>mod<sp/>count<sp/>indicates<sp/>how<sp/>many<sp/>different<sp/>moduli</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>are<sp/>used.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>mod_index<sp/>The<sp/>mod<sp/>index<sp/>indicates<sp/>which<sp/>modules<sp/>are<sp/>used</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(device<sp/>or<sp/>unified<sp/>memory<sp/>required).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>repeat_count<sp/>The<sp/>repeat<sp/>count<sp/>indicates<sp/>how<sp/>many<sp/>times<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>modulus<sp/>order<sp/>is<sp/>repeated.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@example</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>example1:<sp/>each<sp/>array<sp/>size<sp/>=<sp/>2^log_size,<sp/>mod_count<sp/>=<sp/>2,<sp/>repeat_count<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>modulus<sp/>order:<sp/>[<sp/><sp/>q0<sp/>,<sp/><sp/><sp/>q1<sp/>,<sp/><sp/><sp/>q2<sp/>,<sp/><sp/><sp/>q3<sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>mod_index<sp/><sp/><sp/><sp/>:<sp/>[<sp/><sp/>0<sp/><sp/><sp/>,<sp/><sp/><sp/><sp/>2<sp/><sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>array<sp/>order<sp/><sp/>:<sp/>[array0]<sp/>since<sp/>repeat_count<sp/>=<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>output<sp/>array<sp/>:<sp/>[array0<sp/>%<sp/>q0,<sp/>array0<sp/>%<sp/>q2]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>example2:<sp/>each<sp/>array<sp/>size<sp/>=<sp/>2^log_size,<sp/>mod_count<sp/>=<sp/>2,<sp/>repeat_count<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>2</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>modulus<sp/>order:<sp/>[<sp/><sp/>q0<sp/>,<sp/><sp/><sp/>q1<sp/>,<sp/><sp/><sp/>q2<sp/>,<sp/><sp/><sp/>q3<sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>mod_index<sp/><sp/><sp/><sp/>:<sp/>[<sp/><sp/>0<sp/><sp/><sp/>,<sp/><sp/><sp/><sp/>3<sp/><sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>array<sp/>order<sp/><sp/>:<sp/>[array0,<sp/>array1]<sp/>since<sp/>repeat_count<sp/>=<sp/>2</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>output<sp/>array<sp/>:<sp/>[array0<sp/>%<sp/>q0,<sp/>array0<sp/>%<sp/>q3,<sp/>array1<sp/>%<sp/>q0,<sp/>array1<sp/>%</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>q3]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@note<sp/>Total<sp/>generated<sp/>random<sp/>number<sp/>count<sp/>=<sp/>(2^log_size)<sp/>x<sp/>mod_count</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>x<sp/>repeat_count</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__host__<sp/>void<sp/>modular_ternary_random_number_generation(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data64*<sp/>pointer,<sp/>Modulus64*<sp/>modulus,<sp/>Data64<sp/>log_size,<sp/>int<sp/>mod_count,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int*<sp/>mod_index,<sp/>int<sp/>repeat_count,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream<sp/>=<sp/>cudaStreamDefault);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Generates<sp/>Ternary-distributed<sp/>random<sp/>numbers<sp/>in<sp/>given<sp/>modulo</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>order.<sp/>(-1,0,1)<sp/>(From<sp/>RNGonGPU<sp/>Library)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>function<sp/>produces<sp/>Ternary-distributed<sp/>random<sp/>numbers<sp/>that<sp/>are</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>reduced<sp/>modulo<sp/>a<sp/>given<sp/>modulo<sp/>order.<sp/>The<sp/>numbers<sp/>are<sp/>written<sp/>to<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>memory<sp/>pointed<sp/>to<sp/>by<sp/>@p<sp/>pointer,<sp/>which<sp/>must<sp/>reside<sp/>on<sp/>the<sp/>GPU<sp/>or<sp/>in</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>unified<sp/>memory.<sp/>If<sp/>the<sp/>pointer<sp/>does<sp/>not<sp/>reference<sp/>GPU<sp/>or<sp/>unified</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>memory,<sp/>an<sp/>error<sp/>is<sp/>thrown.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>pointer<sp/>Pointer<sp/>to<sp/>the<sp/>memory<sp/>for<sp/>storing<sp/>random<sp/>numbers</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(device<sp/>or<sp/>unified<sp/>memory<sp/>required).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>modulus<sp/>The<sp/>modulus<sp/>used<sp/>to<sp/>reduce<sp/>the<sp/>generated<sp/>random</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>numbers<sp/>(device<sp/>or<sp/>unified<sp/>memory<sp/>required).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>log_size<sp/>The<sp/>log<sp/>domain<sp/>number<sp/>of<sp/>random<sp/>numbers<sp/>to<sp/>generate.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(log_size<sp/>should<sp/>be<sp/>power<sp/>of<sp/>2)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>mod_count<sp/>The<sp/>mod<sp/>count<sp/>indicates<sp/>how<sp/>many<sp/>different<sp/>moduli</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>are<sp/>used.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>mod_index<sp/>The<sp/>mod<sp/>index<sp/>indicates<sp/>which<sp/>modules<sp/>are<sp/>used</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(device<sp/>or<sp/>unified<sp/>memory<sp/>required).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>repeat_count<sp/>The<sp/>repeat<sp/>count<sp/>indicates<sp/>how<sp/>many<sp/>times<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>modulus<sp/>order<sp/>is<sp/>repeated.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>entropy_input<sp/>The<sp/>entropy<sp/>input<sp/>string<sp/>of<sp/>bits<sp/>obtained<sp/>from</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>randomness<sp/>source.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>additional_input<sp/>The<sp/>additional<sp/>input<sp/>string<sp/>received<sp/>from<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>consuming<sp/>application.<sp/>Note<sp/>that<sp/>the<sp/>length<sp/>of<sp/>the<sp/>additional_input</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>string<sp/>may<sp/>be<sp/>zero.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@example</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>example1:<sp/>each<sp/>array<sp/>size<sp/>=<sp/>2^log_size,<sp/>mod_count<sp/>=<sp/>2,<sp/>repeat_count<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>modulus<sp/>order:<sp/>[<sp/><sp/>q0<sp/>,<sp/><sp/><sp/>q1<sp/>,<sp/><sp/><sp/>q2<sp/>,<sp/><sp/><sp/>q3<sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>mod_index<sp/><sp/><sp/><sp/>:<sp/>[<sp/><sp/>0<sp/><sp/><sp/>,<sp/><sp/><sp/><sp/>2<sp/><sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>array<sp/>order<sp/><sp/>:<sp/>[array0]<sp/>since<sp/>repeat_count<sp/>=<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>output<sp/>array<sp/>:<sp/>[array0<sp/>%<sp/>q0,<sp/>array0<sp/>%<sp/>q2]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>example2:<sp/>each<sp/>array<sp/>size<sp/>=<sp/>2^log_size,<sp/>mod_count<sp/>=<sp/>2,<sp/>repeat_count<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>2</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>modulus<sp/>order:<sp/>[<sp/><sp/>q0<sp/>,<sp/><sp/><sp/>q1<sp/>,<sp/><sp/><sp/>q2<sp/>,<sp/><sp/><sp/>q3<sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>mod_index<sp/><sp/><sp/><sp/>:<sp/>[<sp/><sp/>0<sp/><sp/><sp/>,<sp/><sp/><sp/><sp/>3<sp/><sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>array<sp/>order<sp/><sp/>:<sp/>[array0,<sp/>array1]<sp/>since<sp/>repeat_count<sp/>=<sp/>2</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>-<sp/>output<sp/>array<sp/>:<sp/>[array0<sp/>%<sp/>q0,<sp/>array0<sp/>%<sp/>q3,<sp/>array1<sp/>%<sp/>q0,<sp/>array1<sp/>%</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>q3]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@note<sp/>Total<sp/>generated<sp/>random<sp/>number<sp/>count<sp/>=<sp/>(2^log_size)<sp/>x<sp/>mod_count</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>x<sp/>repeat_count</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__host__<sp/>void<sp/>modular_ternary_random_number_generation(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data64*<sp/>pointer,<sp/>Modulus64*<sp/>modulus,<sp/>Data64<sp/>log_size,<sp/>int<sp/>mod_count,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int*<sp/>mod_index,<sp/>int<sp/>repeat_count,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>char&gt;&amp;<sp/>entropy_input,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;unsigned<sp/>char&gt;<sp/>additional_input,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream<sp/>=<sp/>cudaStreamDefault);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>private:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RandomNumberGenerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RandomNumberGenerator(const<sp/>RandomNumberGenerator&amp;)<sp/>=<sp/>delete;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RandomNumberGenerator&amp;<sp/>operator=(const<sp/>RandomNumberGenerator&amp;)<sp/>=<sp/>delete;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>std::shared_ptr&lt;rngongpu::RNG&lt;rngongpu::Mode::AES&gt;&gt;<sp/>generator_;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>bool<sp/>initialized_;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>std::mutex<sp/>mutex_;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">}<sp/>//<sp/>namespace<sp/>heongpu</highlight></codeline>
<codeline><highlight class="normal">#endif<sp/>//<sp/>HEONGPU_RANDOM_GENERATOR_CLASS_H</highlight></codeline>
    </programlisting>
    <location file="/home/alisah/Desktop/HEonGPU_DOCS/HEonGPU/src/heongpu/include/util/random.cuh"/>
  </compounddef>
</doxygen>
